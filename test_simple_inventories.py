#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test para verificar el endpoint get_inventories_by_shopping_id
Devuelve precios p√∫blicos, privados y fecha de llegada
"""

import requests

def test_get_inventories_endpoint():
    # Shopping ID de ejemplo
    shopping_id = 139
    
    # URL del endpoint
    url = f"http://127.0.0.1:8000/shoppings/get_inventories/{shopping_id}"
    
    print(f"Testing URL: {url}")
    print("=" * 60)
    
    try:
        response = requests.get(url)
        
        if response.status_code == 200:
            data = response.json()
            message = data.get('message', {})
            
            print(f"‚úÖ Status: {message.get('status')}")
            print(f"üìù Message: {message.get('message')}")
            print(f"üõí Shopping ID: {message.get('shopping_id')}")
            print(f"üì¶ Total inventarios: {len(message.get('data', []))}")
            print("\n" + "=" * 60)
            
            # Mostrar los datos principales que se necesitan
            for i, item in enumerate(message.get('data', [])[:3], 1):
                print(f"\nüìã INVENTARIO {i}:")
                print(f"   Producto: {item.get('product_name')} ({item.get('product_code')})")
                print(f"   üí∞ Precio P√∫blico: ${item.get('public_sale_price', 0):,.2f}")
                print(f"   üîí Precio Privado: ${item.get('private_sale_price', 0):,.2f}")
                print(f"   üìÖ Fecha Llegada: {item.get('arrival_date', 'No especificada')}")
                print(f"   üì¶ Cantidad: {item.get('quantity', 0)}")
                print(f"   üíµ Costo Unitario: ${item.get('unit_cost', 0):,.2f}")
            
            if len(message.get('data', [])) > 3:
                print(f"\n... y {len(message.get('data', [])) - 3} inventarios m√°s")
                
        else:
            print(f"‚ùå Error HTTP {response.status_code}")
            print(f"Response: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error en la petici√≥n: {e}")

if __name__ == "__main__":
    test_get_inventories_endpoint()
